{"version":3,"sources":["src/server.js"],"names":[],"mappings":"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","file":"src/server.js","sourcesContent":["\nvar WebSocketServer   = require('websocket').server,\n    http              = require('http'),\n    log               = require('consologger'),\n    startServing,\n    DEBUG_FLAG        = false,\n    callbacksForMessage,\n    onMessage,\n    offMessage,\n    getId,\n    CONNECTIONS_MAP,\n    connections,\n    pushMessage,\n    checkIfCommand,\n    httpHandler,\n    setDebug;\n\n\n\nCONNECTIONS_MAP = new Map();\n\n\n//  -------------------------------------------------   connections\nconnections = {};\n\n//  -------------------------------------------------   connections.get\nconnections.get = (id) => {\n  let value = CONNECTIONS_MAP.get(id);\n  return value;\n};\n\n//  -------------------------------------------------   connections.has\nconnections.has = (id) => {\n  let boolean = CONNECTIONS_MAP.has(id);\n  return boolean;\n};\n\n//  -------------------------------------------------   connections.set\nconnections.set = (key, value) => {\n  let setResult = CONNECTIONS_MAP.set(key, value);\n  return setResult;\n};\n\n//  -------------------------------------------------   connections.delete\nconnections.delete = (id) => {\n  let deleteResult = CONNECTIONS_MAP.delete(id);\n  return deleteResult;\n};\n\n\n//  -------------------------------------------------   getId\n//  id generator\ngetId = (function*() {\n  var counter = 0;\n\n  while(true) {\n    yield counter;\n    counter += 1;\n  }\n})();\n\n\n//  -------------------------------------------------   checkIfCommand\n//  check if an incoming message is a valid command\ncheckIfCommand = (command) => {\n\n  if(typeof command === 'object' && !!command){\n\n    let hasType = command.type === 'set' || command.type === 'ref';\n    let hasPathOrValue = Array.isArray(command.path) || command.value !== undefined;\n\n    if( hasType && hasPathOrValue ){\n      return true;\n    }\n  }\n  //  else\n  return false;\n};\n\n\n//  -------------------------------------------------   pushMessage\npushMessage = (connectionId, message) => {\n\n  //  check if that connection exists\n  if(!connections.has(connectionId)){\n    DEBUG_FLAG &&\n    log.error(`Connection with id ${connectionId} was not found!`);\n    return false;\n  }\n\n\n  connections\n  .get(connectionId)\n  .sendUTF( JSON.stringify(message) );\n\n  DEBUG_FLAG &&\n  log.info(`[Server][Connection id ${connectionId}] Message sent`);\n};\n\n\n//  keep an array with the callbacks\ncallbacksForMessage = [];\n\n//  -------------------------------------------------   onMessage\nonMessage = (callback) => {\n\n  if(typeof callback === 'function'){\n    callbacksForMessage.push(callback);\n  }\n};\n\n//  trigger for the callbacks\nonMessage.trigger = (input) => {\n\n  if(typeof input !== 'object' || typeof input.message !== 'string'){\n    return false;\n  }\n\n  try {\n    input.message = JSON.parse(input.message);\n  } catch(err) {\n    throw new Error('message is not JSON!');\n  }\n\n  if(checkIfCommand(input.message)){\n\n    let newInput = {\n      connectionId: input.connectionId,\n      command: input.message\n    };\n\n    callbacksForMessage\n    .forEach(callback => callback.call(onMessage, newInput));\n  }\n\n};\n\n//  -------------------------------------------------   offMessage\noffMessage = (callback) => {\n\n  var isInTheArray = callbacksForMessage.contains(callback);\n\n  if(typeof callback === 'function' && isInTheArray){\n    callbacksForMessage\n    .splice(index, 1);\n  }\n};\n\n\n//  -------------------------------------------------   httpHandler\n//  handle any HTTP requests we may have\nhttpHandler = (request, response) => {\n  DEBUG_FLAG &&\n  log.info((new Date()) + ' Received request for ' + request.url);\n  response.writeHead(404);\n  response.end();\n};\n\n\n// // =========================================================  immutabixServer\n// immutabixServer = () => {\n//\n//   var start,\n//       DEBUG_FLAG = false,\n//       setDebug;\n\n\n  //  start an HTTP server\n  //  start a websocket server\n  //\n  //  - when a new websocket connection is made, the id is added on the map\n  //  - when a message is received, onMessage.trigger is called\n  //    with connection id and the message\nstartServing = (configuration) => {\n\n  if(typeof configuration.DEBUG_FLAG === 'boolean'){\n    DEBUG_FLAG = configuration.debug;\n  }\n\n  //  just bounce back HTTP requests\n  const server = http.createServer(httpHandler);\n\n  //  start the HTTP server\n  server.listen(configuration.port);\n\n  //  start the websocket server\n  const wsServer = new WebSocketServer({\n    httpServer: server,\n    // You should not use autoAcceptConnections for production\n    // applications, as it defeats all standard cross-origin protection\n    // facilities built into the protocol and the browser.  You should\n    // *always* verify the connection's origin and decide whether or not\n    // to accept it.\n    autoAcceptConnections: false\n  });\n\n  // put logic here to detect whether the specified origin is allowed.\n  const originIsAllowed = (origin) => { return true; };\n\n  wsServer\n  .on('request', (request) => {\n\n    if (!originIsAllowed(request.origin)) {\n      // Make sure we only accept requests from an allowed origin\n      request.reject();\n      DEBUG_FLAG &&\n      log.error((new Date()) + ' Connection from origin ' + request.origin + ' rejected.');\n      return;\n    }\n\n    var connection = request.accept('echo-protocol', request.origin),\n        connectionId = getId.next().value;\n\n    connections.set(connectionId, connection);\n\n    DEBUG_FLAG &&\n    log.info(`${(new Date())}\\n[Server] Websocket connection accepted`);\n\n    connection\n    .on('message', (message) => {\n\n      var messageData;\n\n      if (message.type === 'utf8') {\n\n        DEBUG_FLAG &&\n        log.data('[Server] Received Message: ' + message.utf8Data);\n\n        messageData = message.utf8Data\n      }\n      else if (message.type === 'binary') {\n\n        DEBUG_FLAG &&\n        log.data('[Server] Received Binary Message of ' + message.binaryData.length + ' bytes');\n\n        messageData = message.binaryData;\n      }\n\n      onMessage.trigger({\n        connectionId: connectionId,\n        message: messageData\n      });\n    });\n\n    connection\n    .on('close', (reasonCode, description) => {\n      DEBUG_FLAG &&\n      log.warning((new Date()) + ' Peer ' + connection.remoteAddress + ' disconnected.');\n      connections.delete(connectionId);\n    });\n  });\n};\n\n\nsetDebug = (boolean) => {\n  DEBUG_FLAG = !!boolean;\n};\n\n\n\nmodule.exports = {\n  startServing: startServing,\n  onMessage: onMessage,\n  offMessage: offMessage,\n  pushMessage: pushMessage,\n  setDebug: setDebug\n};\n"]}